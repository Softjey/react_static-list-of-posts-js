{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","length","map","id","UserInfo","user","PostInfo","post","title","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"018IAAaA,EAAc,SAAC,GAAD,QACzBC,QACEC,EAFuB,EAEvBA,KACAC,EAHuB,EAGvBA,MACAC,EAJuB,EAIvBA,KAJuB,OAOzB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IAEtC,OAED,mBAAGG,UAAU,qBAAqBC,KAAI,iBAAYH,GAAlD,SACGA,OAIL,qBAAKE,UAAU,oBAAf,SAAoCD,QCd3BG,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACL,IAApBA,EAASC,OACJ,mBAAG,UAAQ,oBAAX,6BAGD,qBAAKJ,UAAU,cAAf,SACGG,EAASE,KAAI,SAAAT,GAAO,OACnB,cAAC,EAAD,CAAaA,QAASA,GAAcA,EAAQU,UCTzCC,G,MAAW,SAAC,GAAD,QACtBC,KACEX,EAFoB,EAEpBA,KACAC,EAHoB,EAGpBA,MAHoB,OAMtB,mBAAGE,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SAAkDD,MCHvCY,EAAW,SAAC,GAAD,QACtBC,KACEC,EAFoB,EAEpBA,MACAZ,EAHoB,EAGpBA,KACAS,EAJoB,EAIpBA,KACAL,EALoB,EAKpBA,SALoB,OAQtB,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SAAiCW,IAEjC,8BACG,eAED,cAAC,EAAD,CAAUH,KAAMA,UAIpB,mBAAGR,UAAU,iBAAb,SAA+BD,IAE/B,uBAEA,cAAC,EAAD,CAAaI,SAAUA,QC1BdS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,qBAAKb,UAAU,WAAf,SACGa,EAAMR,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKJ,UCatC,IAAMO,EAAQC,EAAgBT,KAAI,SAAAK,GAAI,kCACjCA,GADiC,IAEpCF,MAZmBO,EAYDL,EAAKK,OAXhBC,EAAgBC,MAAK,SAAAT,GAAI,OAAIA,EAAKF,KAAOS,MAYhDZ,UATuBe,EASGR,EAAKJ,GARxBa,EAAmBC,QAAO,SAAAxB,GAAO,OACtCA,EAAQsB,SAAWA,QAFvB,IAAyBA,EAJJH,KAgBRM,EAAM,kBACjB,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCAEA,cAAC,EAAD,CAAUa,MAAOA,QCxBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fa63771e.chunk.js","sourcesContent":["export const CommentInfo = ({\n  comment: {\n    name,\n    email,\n    body,\n  },\n}) => (\n  <div className=\"CommentInfo\">\n    <div className=\"CommentInfo__title\">\n      <strong className=\"CommentInfo__name\">{name}</strong>\n\n      {' by '}\n\n      <a className=\"CommentInfo__email\" href={`mailto:${email}`}>\n        {email}\n      </a>\n    </div>\n\n    <div className=\"CommentInfo__body\">{body}</div>\n  </div>\n);\n","import './CommentList.scss';\n\nimport { CommentInfo } from '../CommentInfo';\n\nexport const CommentList = ({ comments }) => (\n  comments.length === 0\n    ? (<b data-cy=\"NoCommentsMessage\">No comments yet</b>)\n\n    : (\n      <div className=\"CommentList\">\n        {comments.map(comment => (\n          <CommentInfo comment={comment} key={comment.id} />\n        ))}\n      </div>\n    )\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({\n  user: {\n    name,\n    email,\n  },\n}) => (\n  <a className=\"UserInfo\" href={`mailto:${email}`}>{name}</a>\n);\n","import './PostInfo.scss';\n\nimport { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\n\nexport const PostInfo = ({\n  post: {\n    title,\n    body,\n    user,\n    comments,\n  },\n}) => (\n  <div className=\"PostInfo\">\n    <div className=\"PostInfo__header\">\n      <h3 className=\"PostInfo__title\">{title}</h3>\n\n      <p>\n        {' Posted by  '}\n\n        <UserInfo user={user} />\n      </p>\n    </div>\n\n    <p className=\"PostInfo__body\">{body}</p>\n\n    <hr />\n\n    <CommentList comments={comments} />\n  </div>\n);\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <div className=\"PostList\">\n    {posts.map(post => (\n      <PostInfo post={post} key={post.id} />\n    ))}\n  </div>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\n\nimport { PostList } from './components/PostList';\n\nfunction getUserById(userId) {\n  return usersFromServer.find(user => user.id === userId);\n}\n\nfunction getPostComments(postId) {\n  return commentsFromServer.filter(comment => (\n    comment.postId === postId\n  ));\n}\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUserById(post.userId),\n  comments: getPostComments(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}